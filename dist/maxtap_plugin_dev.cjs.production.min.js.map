{"version":3,"file":"maxtap_plugin_dev.cjs.production.min.js","sources":["../src/config.ts","../src/Utils/utils.ts","../src/app.ts"],"sourcesContent":["export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\nexport const CssCdn = 'https://unpkg.com/maxtap_plugin_dev@0.1.23/dist/styles.css';\n","import { DataUrl, DataAttribute } from \"../config\";\nimport { ComponentData } from \"../app\";\nexport const fetchAdData = (file_name: string): Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        try {\n            if (!file_name.includes('.json')) {\n                file_name += '.json';\n            }\n            fetch(`${DataUrl}/${file_name}`\n                , {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                }\n            )\n                .then(fetch_res => {\n                    fetch_res.json().then((json_data: []) => {\n                        json_data.sort((a, b) => {\n                            if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n                                return -1;\n                            }\n                            if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n                                return 1;\n                            }\n                            return 0;\n                        })\n\n                        res(json_data);\n                    })\n                }).catch(err => {\n                    rej(err);\n                })\n        } catch (err) {\n            rej(err)\n        }\n    })\n\n}\n\nexport const getVideoElement = (): HTMLVideoElement | undefined => {\n\n    const elements = document.querySelectorAll(`[${DataAttribute}]`);\n    for (let i = 0; i < elements.length; i++) {\n        if (elements[i].tagName === 'VIDEO') {\n            return elements[i] as HTMLVideoElement;\n        }\n\n    }\n    console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n                   Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n                            [OR]\n                   Try to initialize the maxtap_ad component after window load.`);\n    return;\n}\n\nexport const resizeComponentImgAccordingToVideo = (video: HTMLVideoElement) => {\n    const img_wrapper = document.querySelector('.maxtap_img_wrapper') as HTMLDivElement;\n    const per = (video.getBoundingClientRect().width * (8 / 100));\n    if (per <= 125 && per >= 80 && img_wrapper) {\n        img_wrapper.style.width = per + \"px\";\n    }\n}\nexport const getCurrentComponentIndex = (components_data:ComponentData[],video_current_time:number) :number=> {\n    for (let i = 0; i < components_data.length; i++) {\n        const component = components_data[i];   \n        if (video_current_time >= component.start_time && video_current_time <= component.end_time) {\n            return i;\n        }\n    }\n    return -1;\n}","import { CssCdn, DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId } from './config.js';\nimport { fetchAdData, getCurrentComponentIndex, getVideoElement } from './Utils/utils.js';\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\ninterface PluginProps {\n    content_id: string;\n}\n\nexport interface ComponentData {\n    is_image_loaded: boolean;\n    start_time: number;\n    end_time: number;\n    image_link: string;\n    redirect_link: string;\n    caption_regional_language: string;\n    client_name: string;\n    content_name: string;\n    duration: number;\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private current_component_index = 0;\n    private components_data?: ComponentData[];\n    private content_id: string;\n\n    constructor(data: PluginProps) {\n        this.content_id = data.content_id;\n        this.parentElement = null;\n        const css_link_element = document.createElement('link');\n        css_link_element.href = CssCdn;\n        css_link_element.rel = 'stylesheet';\n        const ga_script_element = document.createElement('script');\n        ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n        ga_script_element.async = true;\n        ga_script_element.id = GoogleAnalyticsCode;\n        ga_script_element.addEventListener('load', () => {\n            window.dataLayer = window.dataLayer || [];\n            window.gtag = function () { window.dataLayer.push(arguments); }\n            window.gtag('js', new Date());\n            window.gtag('config', GoogleAnalyticsCode)\n        })\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(css_link_element);\n        head_tag?.appendChild(ga_script_element);\n        console.log('update-2');\n    }\n\n\n\n    public init = () => {\n\n        this.video = getVideoElement();\n\n        if (!this.video) {\n            console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n            [OR]\n            Try to initialize the maxtap_ad component after window load.\n            `);\n            return;\n        }\n        try {\n            fetchAdData(this.content_id).then(data => {\n                this.components_data = data\n                if (!this.components_data) { return; }\n                this.initializeComponent();\n                const maxtap_component = document.getElementById(MaxTapComponentElementId);\n                maxtap_component!.addEventListener('click', () => {\n                    this.onComponentClick();\n                })\n                //* Checking for every second if video time is equal to ad start time.\n                setInterval(() => {\n                    this.updateComponent();\n                }, 500);\n            })\n                .catch(err => {\n                    console.error(err)\n                })\n\n        } catch (err) {\n            console.error(err);\n\n        }\n    }\n\n    private updateComponent = () => {\n\n        if (!this.video || !this.components_data) {\n            console.error(\"Cannot find video element with id \");\n            return;\n        }\n\n        const current_index = getCurrentComponentIndex(this.components_data, this.video.currentTime);\n\n        if (current_index >= 0) {\n            this.current_component_index = current_index;\n        } else {\n            this.removeCurrentComponent();\n        }\n        if (!this.components_data[this.current_component_index].is_image_loaded && ((this.components_data[this.current_component_index].start_time - this.video!.currentTime) <= 15)) {\n            this.prefetchImage();\n        }\n        if (this.canComponentDisplay(this.video!.currentTime)) {\n            this.displayComponent()\n        }\n        if (this.canCloseComponent(this.video!.currentTime)) {\n            this.current_component_index++;\n            this.removeCurrentComponent();\n        }\n    }\n\n    private initializeComponent = () => {\n\n        //*  Getting data from firestore using http request. And changing state of component.\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n        this.parentElement = this.video.parentElement;\n        if(!this.parentElement){return}\n        this.parentElement.style.position='relative';\n        const main_component = document.createElement('div');\n        main_component.style.display = 'none';\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n        this.parentElement?.appendChild(main_component);\n        //!<------------------>  Re-initializing the video to get latest reference after manipulating dom elements.<----------------------->\n        this.video = getVideoElement();\n\n    }\n\n    private prefetchImage = () => {\n        if (!this.components_data) { return; }\n        this.components_data[this.current_component_index].is_image_loaded = true;\n        let img = new Image();\n        img.src = this.components_data[this.current_component_index]['image_link'];\n    }\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if (!this.components_data) { return false; }\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime >= this.components_data[this.current_component_index].start_time)) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n        if (!this.components_data) return true;\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        if ((currentTime >= this.components_data[this.current_component_index].end_time)) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent() {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (!main_container) { return; }\n        if (main_container.style.display !== 'none') {\n            main_container.style.display = \"none\";\n            main_container.innerHTML = '';\n        }\n    }\n\n    private displayComponent = () => {\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        const component_html =\n            `\n        <div class=\"maxtap_main\" >\n        <p>${this.components_data![this.current_component_index].caption_regional_language}</p>\n        <div class=\"maxtap_img_wrapper\">\n        <img src=\"${this.components_data![this.current_component_index].image_link}\"/>\n        </div>\n        </div>\n        `\n        if (main_component.style.display === 'none') {\n            main_component.style.display = 'flex';\n            main_component.innerHTML = component_html;\n        };\n        // resizeComponentImgAccordingToVideo(this.video!);\n\n        window.gtag('event', 'watch', {\n            'event_category': 'impression',\n            'event_action': 'watch',\n            \"content_id\": this.content_id,\n        })\n\n    }\n\n    private onComponentClick = () => {\n        window.gtag('event', 'click', {\n            'event_category': 'action',\n            'event_action': 'click',\n            \"content_id\": this.content_id,\n            \"click_time\": Math.floor(this.video!.currentTime)\n        })\n        if (!this.components_data) { return; }\n        window.open(this.components_data![this.current_component_index].redirect_link, \"_blank\");\n    }\n\n}\n"],"names":["getVideoElement","elements","document","querySelectorAll","i","length","tagName","console","error","data","file_name","_this","video","content_id","Promise","res","rej","includes","fetch","DataUrl","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","components_data","initializeComponent","getElementById","addEventListener","onComponentClick","setInterval","updateComponent","current_index","video_current_time","component","start_time","end_time","getCurrentComponentIndex","currentTime","current_component_index","removeCurrentComponent","is_image_loaded","prefetchImage","canComponentDisplay","displayComponent","canCloseComponent","style","width","height","parentElement","position","main_component","createElement","display","id","className","appendChild","Image","src","component_html","caption_regional_language","image_link","innerHTML","window","gtag","Math","floor","open","redirect_link","css_link_element","href","rel","ga_script_element","async","dataLayer","push","arguments","Date","head_tag","querySelector","log","main_container"],"mappings":"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"}