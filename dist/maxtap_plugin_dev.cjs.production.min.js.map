{"version":3,"file":"maxtap_plugin_dev.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Utils/utils.ts","../src/index.ts","../src/app.ts","../src/config.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { DataUrl, DataAttribute } from \"../config\";\nimport { ComponentData } from \"../app\";\nexport const fetchAdData = (file_name: string): Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        try {\n            if (!file_name.includes('.json')) {\n                file_name += '.json';\n            }\n            fetch(`${DataUrl}/${file_name}`\n                , {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                }\n            )\n                .then(fetch_res => {\n                    fetch_res.json().then((json_data: []) => {\n                        json_data.sort((a, b) => {\n                            if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n                                return -1;\n                            }\n                            if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n                                return 1;\n                            }\n                            return 0;\n                        })\n\n                        res(json_data);\n                    })\n                }).catch(err => {\n                    rej(err);\n                })\n        } catch (err) {\n            rej(err)\n        }\n    })\n\n}\n\nexport const getVideoElement = (): HTMLVideoElement | undefined => {\n\n    const elements = document.querySelectorAll(`[${DataAttribute}]`);\n    for (let i = 0; i < elements.length; i++) {\n        if (elements[i].tagName === 'VIDEO') {\n            return elements[i] as HTMLVideoElement;\n        }\n\n    }\n    console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n                   Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n                            [OR]\n                   Try to initialize the maxtap_ad component after window load.`);\n    return undefined;\n}\n\nexport const resizeComponentImgAccordingToVideo = (video: HTMLVideoElement) => {\n    const img_wrapper = document.querySelector('.maxtap_img_wrapper') as HTMLDivElement;\n    const per = (video.getBoundingClientRect().width * (8 / 100));\n    if (per <= 125 && per >= 80 && img_wrapper) {\n        img_wrapper.style.width = per + \"px\";\n    }\n}\nexport const getCurrentComponentIndex = (components_data:ComponentData[],video_current_time:number) :number=> {\n    for (let i = 0; i < components_data.length; i++) {\n        const component = components_data[i];   \n        if (video_current_time >= component.start_time && video_current_time <= component.end_time) {\n            return i;\n        }\n    }\n    return -1;\n}","import './styles.less'\nimport { LIB_VERSION } from './version';\nconsole.log(`maxtap_plugin@${LIB_VERSION}`);\nexport {Component} from  './app';\n","import { DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId } from './config';\nimport { fetchAdData, getCurrentComponentIndex, getVideoElement } from './Utils/utils';\nimport * as platform from 'platform'\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\n\n\n/* \ngtag('event','impression', {\n* OTT Details\n  \"ott\":\"hotstar\",\n  \"content_id\":\"64g263d26ow\",Â Â Â Â //dimension\n  \"content_name\":\"house_of_cards_s2e6\", //dimension\n ?\"content_type\":\"movie\"\n\n ! \"webseries\":\"house_of_cards\", //dimension\n\n* Ad details\n ! \"advertiser\":\"myntra\", //dimension (user scope)\n ! \"campaign\":\"myntra_EORS\", //dimension (user scope)\n ! \"product\":\"raymond_shirt\", //dimension (event scope)\n ? \"product_subcategory\":\"bottom wear\"\n  \"product_category\":\"shirt\", //dimension (user scope)\n  !\"ad_group\":\"raymond_blue_shirt\", //dimension (event scope)\n  !\"ad_unit\":\"raymond_blue_shirt_hindi\", //dimension (event scope)\n\n* Interaction Details\n  \"start_time\":\"534\", //metrics (event scope)\n  \"user_video_playback\":\"186\", //metrics (event scope) (how many seconds a user has played the current video. It is possible that this number is smaller than start_time, if the user has forwarded the video. Not sure if this value can be derived.)\n  \"hover\":\"yes\", //dimension (user scope) (user hovered their mouse on the ad. If it is possible to track)\n\n* User details\n    \"ott_user_id\":\"charan6453\" //dimension (event scope) (this id is provided by the OTT. Or we will generate some unique id using cookie.)\n    \"session_id\":\"ow5mtpsma762h58\" //dimension (event scope) (this id is provided by GA using session cookie.)\n    \"is_registered\":\"yes\" //dimension (user scope) (whether logged in or not)\n    \"subscription\":\"paid\" //dimension (user scope) (whether paid or free user)\n\n});\n\n\n1) Check if it possible to track whether a user hovered their mouse on the ad or not.\n*/\ninterface PluginProps {\n    content_id: string;\n}\n\nexport interface ComponentData {\n    is_image_loaded: boolean;\n    start_time: number;\n    end_time: number;\n    image_link: string;\n    redirect_link: string;\n    caption_regional_language: string;\n    client_name: string;\n    content_name: string;\n    duration: number;\n    times_viewed: number;\n    times_clicked: number\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private current_component_index = 0;\n    private components_data?: ComponentData[];\n    private content_id: string;\n\n    constructor(data: PluginProps) {\n        this.content_id = data.content_id;\n        this.parentElement = null;\n    }\n\n\n    public init = () => {\n        try {\n            const ga_script_element = document.createElement('script');\n            ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n            ga_script_element.async = true;\n            ga_script_element.id = GoogleAnalyticsCode;\n            ga_script_element.addEventListener('load', () => {\n                window.dataLayer = window.dataLayer || [];\n                window.gtag = function () { window.dataLayer.push(arguments); }\n                window.gtag('js', new Date());\n                window.gtag('config', GoogleAnalyticsCode)\n            })\n            const head_tag = document.querySelector('head');\n            head_tag?.appendChild(ga_script_element);\n            this.video = getVideoElement();\n\n            if (!this.video) {\n                console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n            [OR]\n            Try to initialize the maxtap_ad component after window load.\n            `);\n                return;\n            }\n            fetchAdData(this.content_id).then(data => {\n                this.components_data = data;\n                if (!this.components_data) { return; }\n\n                this.initializeComponent();\n\n\n                const maxtap_component = document.getElementById(MaxTapComponentElementId);\n                maxtap_component!.addEventListener('click', () => {\n                    this.onComponentClick();\n                })\n                //* Checking for every second if video time is equal to ad start time.\n                setInterval(() => {\n                    this.updateComponent();\n                }, 500);\n            })\n                .catch(err => {\n                    console.error(err)\n                })\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    private updateComponent = () => {\n\n        if (!this.video || !this.components_data) {\n            console.error(\"Cannot find video element with id \");\n            return;\n        }\n        const current_index = getCurrentComponentIndex(this.components_data, this.video.currentTime);\n\n        if (current_index >= 0) {\n            this.current_component_index = current_index;\n        } else {\n            this.removeCurrentComponent();\n        }\n        if (!this.components_data[this.current_component_index]['is_image_loaded'] && ((this.components_data[this.current_component_index].start_time - this.video!.currentTime) <= 15)) {\n            this.prefetchImage();\n        }\n        if (this.canCloseComponent(this.video!.currentTime)) {\n            this.removeCurrentComponent();\n            return;\n        }\n        if (this.canComponentDisplay(this.video!.currentTime)) {\n            this.displayComponent()\n        }\n    }\n\n    private initializeComponent = () => {\n        //*  Getting data from firestore using http request. And changing state of component.\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n        this.parentElement = this.video.parentElement;\n        if (!this.parentElement) { return }\n        this.parentElement.style.position = 'relative';\n        const main_component = document.createElement('div');\n        main_component.style.display = 'none';\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n        this.parentElement?.appendChild(main_component);\n        for (let i = 0; i < this.components_data.length; i++) {\n            this.components_data[i]['times_viewed'] = 0;\n            this.components_data[i]['times_clicked'] = 0;\n            this.components_data[i]['is_image_loaded'] = false;\n        }\n        //!<------------------>  Re-initializing the video to get latest reference after manipulating dom elements.<----------------------->\n        this.video = getVideoElement();\n    }\n\n    private prefetchImage = () => {\n        if (!this.components_data) { return; }\n        this.components_data[this.current_component_index].is_image_loaded = true;\n        let img = new Image();\n        img.src = this.components_data[this.current_component_index]['image_link'];\n    }\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if (!this.components_data) { return false; }\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime < this.components_data[this.current_component_index]['end_time']) && (currentTime > this.components_data[this.current_component_index]['start_time'])) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n        if (!this.components_data) return true;\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        if ((currentTime > this.components_data[this.current_component_index]['end_time'] || (currentTime < this.components_data[this.current_component_index]['start_time']))) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent = () => {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (!main_container) { return; }\n        if (main_container.style.display !== 'none') {\n            main_container.style.display = \"none\";\n            main_container.innerHTML = '';\n        }\n    }\n\n    private displayComponent = () => {\n\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        const component_html =\n            `\n        <div class=\"maxtap_main\" >\n        <p>${this.components_data![this.current_component_index].caption_regional_language}</p>\n        <div class=\"maxtap_img_wrapper\">\n        <img src=\"${this.components_data![this.current_component_index].image_link}\"/>\n        </div>\n        </div>\n        `\n        if (main_component.style.display === 'none') {\n            main_component.style.display = 'flex';\n            main_component.innerHTML = component_html;\n            this.components_data[this.current_component_index]['times_viewed']++; // * Incrementing no of times ad is viewed.\n            const current_component_data = this.components_data[this.current_component_index];\n            const ga_impression_data = {\n                'event_category': 'impression',\n                'event_action': 'watch',\n                'content_id': current_component_data['content_id'] || 'null',\n                'content_name': current_component_data['content_name'] || 'null',\n                'product_type': current_component_data['article_type'] || 'null',\n                'product_category': current_component_data['category'] || 'null',\n                'product_subcategory': current_component_data['subcategory'] ||'null',\n                'times_viewed': current_component_data['times_viewed'] || -1,\n                'advertiser':\"myntra\",\n                'client_name':current_component_data['client_name']||'null',\n                'start_time':current_component_data['start_time']|| -1,\n                'browser_name':platform.name || \"null\",\n                'os_family':platform.os.family||\"null\",\n                'device_manufacturer':platform.manufacturer,\n                'os_architecture':platform.os.architecture,\n                'os_version':platform.os.version ||\"null\",\n                'screen_resolution':`${screen.width}x${screen.height}`,\n                'screen_orientation':screen.orientation.type,\n            }\n            window.gtag('event', 'impression', ga_impression_data)\n        };\n        // resizeComponentImgAccordingToVideo(this.video!);\n\n\n    }\n\n    private onComponentClick = () => {\n        try {\n\n            if (!this.components_data) { return; }\n            this.components_data[this.current_component_index]['times_clicked']++;\n            const current_component_data = this.components_data[this.current_component_index];\n            const ga_click_data = {\n                'event_category': 'action',\n                'event_action': 'click',\n                \"content_id\": current_component_data['content_id'] || this.content_id,\n                \"time_to_click\": Math.floor(this.video.currentTime - this.components_data[this.current_component_index]['start_time']),\n                \"times_clicked\": current_component_data['times_clicked']\n            }\n            window.gtag('event', 'click', ga_click_data)\n            window.open(this.components_data![this.current_component_index].redirect_link, \"_blank\");\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n}","export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getVideoElement","elements","querySelectorAll","i","length","tagName","console","error","log","data","ga_script_element","src","async","id","addEventListener","window","dataLayer","gtag","push","arguments","Date","head_tag","querySelector","_this","video","file_name","content_id","Promise","res","rej","includes","fetch","DataUrl","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","components_data","initializeComponent","getElementById","onComponentClick","setInterval","updateComponent","current_index","video_current_time","component","start_time","end_time","getCurrentComponentIndex","currentTime","current_component_index","removeCurrentComponent","prefetchImage","canCloseComponent","canComponentDisplay","displayComponent","width","height","parentElement","position","main_component","display","className","is_image_loaded","Image","main_container","innerHTML","component_html","caption_regional_language","image_link","current_component_data","ga_impression_data","platform","family","architecture","version","screen","orientation","ga_click_data","Math","floor","open","redirect_link"],"mappings":"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"}