{"version":3,"file":"maxtap_plugin.cjs.production.min.js","sources":["../src/app.ts","../src/Utils/utils.ts","../src/config.ts"],"sourcesContent":["import { CssCdn, DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId, MaxTapMainContainerId } from './config.js';\nimport { fetchAdData } from './Utils/utils.js';\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\ninterface PluginData {\n    content_id: string;\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private component_start_time = -1;\n    private component_end_time = -1;\n    private product_details?: string;\n    private image_url?: string;\n    private redirect_url?: string;\n    private current_component_index = 0;\n    private component_data?: [];\n    private interval_id: any;\n    private is_component_showing = false;\n    private content_id: string;\n    private is_image_loaded: boolean;\n\n    constructor(data: PluginData) {\n        this.content_id = data.content_id;\n        this.parentElement = null;\n        this.is_image_loaded = false;\n        const css_link_element = document.createElement('link');\n        css_link_element.href = CssCdn;\n        css_link_element.rel = 'stylesheet';\n        const ga_script_element = document.createElement('script');\n        ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n        ga_script_element.async = true;\n        ga_script_element.id = GoogleAnalyticsCode;\n        ga_script_element.addEventListener('load', () => {\n            window.dataLayer = window.dataLayer || [];\n            window.gtag = function () { window.dataLayer.push(arguments); }\n            window.gtag('js', new Date());\n            window.gtag('config', GoogleAnalyticsCode)\n\n        })\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(css_link_element);\n        head_tag?.appendChild(ga_script_element);\n    }\n\n    init = () => {\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n        if (!this.video) {\n            console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example:\n            <video src=\"https://some_source\" ${DataAttribute} > </video> `);\n            return;\n        }\n        try {\n            fetchAdData(this.content_id).then(data => {\n                this.component_data = data\n                if (!this.component_data) { return; }\n                this.setRequiredComponentData();\n                this.initializeComponent();\n                const maxtap_component = document.getElementById(MaxTapComponentElementId);\n                maxtap_component?.addEventListener('click', () => {\n                })\n                //* Checking for every second if video time is equal to ad start time.\n                this.interval_id = setInterval(() => {\n                    if (!this.video) {\n                        console.error(\"Cannot find video element with id \");\n                        return;\n                    }\n                    if (!this.is_image_loaded && ((this.component_start_time - this.video!.currentTime) <= 15)) {\n                        this.prefetchImage();\n                    }\n                    if (this.canComponentDisplay(this.video!.currentTime)) {\n                        this.displayComponent();\n                        return;\n                    }\n                    if (this.canCloseComponent(this.video!.currentTime)) {\n                        this.current_component_index++;\n                        this.removeCurrentComponent();\n                    }\n                    //* Updating the current ad data to next ad data.;\n                }, 500);\n            })\n                .catch(err => {\n                    console.error(err)\n                })\n        } catch (err) {\n            console.error(err);\n\n        }\n    }\n\n    private initializeComponent = () => {\n        //*  Getting data from firestore using http request. And changing state of component.\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n        this.parentElement = this.video.parentElement;\n        const main_component = document.createElement('div');\n        const main_container = document.createElement('div') as HTMLDivElement;\n        main_container.className = 'maxtap_container';\n        main_container.id = MaxTapMainContainerId;\n        main_component.style.display = 'none';\n        main_component.addEventListener('click', this.onComponentClick);\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n        main_container.appendChild(this.video);\n        main_container.appendChild(main_component);\n        this.parentElement?.appendChild(main_container);\n        //!<------------------>  Re-initializing the video to get latest reference after manipulating dom elements.<----------------------->\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n    }\n\n    private prefetchImage = () => {\n        if (!this.component_data) { return; }\n        this.is_image_loaded = true;\n        let img = new Image();\n        img.src = this.component_data[this.current_component_index]['image_url'];\n    }\n\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if (this.component_start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime >= this.component_start_time) && !this.is_component_showing) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n\n        if (this.component_start_time < 0) { return false; }\n        if ((currentTime >= this.component_end_time) && this.is_component_showing) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent() {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (this.current_component_index >= this.component_data!.length) {\n            clearInterval(this.interval_id);\n        }\n        else {\n            this.setRequiredComponentData(); // * Updating next ad data to class variables.\n        }\n        if (!main_container) { return; }\n        main_container.style.display = \"none\";\n        main_container.innerHTML = '';\n        this.is_image_loaded = false;\n        this.is_component_showing = false;\n    }\n\n    private displayComponent = () => {\n        //* Displaying ad by just changing css display:none -> display:flex\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        main_component.style.display = 'flex';\n        main_component.innerHTML = `\n        <div class=\"maxtap_main\" >\n            <p>${this.product_details}</p>\n            <div class=\"maxtap_img_wrapper\">\n                <img src=\"${this.image_url}\"/>\n            </div>\n        </div>\n        `\n        window.gtag('event', 'watch', {\n            'event_category': 'impression',\n            'event_action': 'watch',\n            \"content_id\": this.content_id,\n        })\n        this.is_component_showing = true;\n    }\n\n    private onComponentClick = () => {\n        window.gtag('event', 'click', {\n            'event_category': 'action',\n            'event_action': 'click',\n            \"content_id\": this.content_id,\n            \"click_time\": Math.floor(this.video!.currentTime)\n        })\n        if (!this.redirect_url) { return; }\n        window.open(this.redirect_url, \"_blank\");\n    }\n\n\n    private setRequiredComponentData() {\n        //* Setting ad to class variable and as well to react state.\n        if (!this.component_data) return;\n        const data = this.component_data;\n        this.component_start_time = parseInt(data[this.current_component_index]['start_time']);\n        this.image_url = data[this.current_component_index]['image_link'];\n        this.redirect_url = data[this.current_component_index]['redirect_link'];\n        this.product_details = data[this.current_component_index]['caption_regional_language'];\n        this.component_end_time = parseInt(data[this.current_component_index]['end_time']);\n    }\n}\n","import { DataUrl } from \"../config\";\nimport { v4 as uuid } from 'uuid'\nexport const fetchAdData = (file_name: string): Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        try {\n            if (!file_name.includes('.json')) {\n                file_name += '.json';\n            }\n            fetch(`${DataUrl}/${file_name}?rd_id=${uuid()}`\n                , {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                }\n            )\n                .then(fetch_res => {\n                    fetch_res.json().then((json_data: []) => {\n                        json_data.sort((a, b) => {\n                            if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n                                return -1;\n                            }\n                            if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n                                return 1;\n                            }\n                            return 0;\n                        })\n                        res(json_data);\n                    })\n                }).catch(err => {\n                    rej(err);\n                })\n        } catch (err) {\n            rej(err)\n        }\n    })\n\n}","export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\nexport const CssCdn = 'https://unpkg.com/maxtap_plugin@0.1.12/dist/styles.css';\n"],"names":["data","file_name","_this","video","document","querySelector","content_id","Promise","res","rej","includes","fetch","DataUrl","uuid","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","component_data","setRequiredComponentData","initializeComponent","maxtap_component","getElementById","addEventListener","interval_id","setInterval","is_image_loaded","component_start_time","currentTime","prefetchImage","canComponentDisplay","displayComponent","canCloseComponent","current_component_index","removeCurrentComponent","console","error","style","width","height","parentElement","main_component","createElement","main_container","className","id","display","onComponentClick","appendChild","Image","src","is_component_showing","component_end_time","innerHTML","product_details","image_url","window","gtag","Math","floor","redirect_url","open","css_link_element","href","rel","ga_script_element","async","dataLayer","push","arguments","Date","head_tag","this","length","clearInterval"],"mappings":"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"}