{"version":3,"file":"maxtap_plugin.cjs.production.min.js","sources":["../src/app.ts","../src/Utils/utils.ts","../src/config.ts"],"sourcesContent":["import { CssCdn, DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId, MaxTapMainContainerId } from './config.js';\nimport { queryData } from './Utils/utils.js';\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\ninterface PluginData{\n    contend_id:string;\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private component_start_time = -1;\n    private component_end_time = -1;\n    private product_details?: string;\n    private image_url?: string;\n    private redirect_url?: string;\n    private current_component_index = 0;\n    private component_data?: [];\n    private interval_id: any;\n    private is_component_showing = false;\n    private content_id: string;\n    private image_loaded: boolean;\n\n    constructor(data:PluginData) {\n        this.content_id = data.contend_id;\n        this.parentElement = null;\n        this.image_loaded = false;\n        const css_file = document.createElement('link');\n        css_file.href = CssCdn;\n        css_file.rel = 'stylesheet';\n\n        const ga_script = document.createElement('script');\n        ga_script.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n        ga_script.async = true;\n        ga_script.id = GoogleAnalyticsCode;\n        ga_script.addEventListener('load', () => {\n\n            window.dataLayer = window.dataLayer || [];\n            window.gtag = function () { window.dataLayer.push(arguments); }\n            window.gtag('js', new Date());\n            window.gtag('config', GoogleAnalyticsCode)\n\n        })\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(css_file);\n        head_tag?.appendChild(ga_script);\n    }\n\n    init = () => {\n\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n        if (!this.video) {\n            console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example:\n            <video src=\"https://some_source\" ${DataAttribute} > </video> `);\n\n            return;\n        }\n        queryData(this.content_id).then(data => {\n            this.component_data = data\n\n            if (!this.component_data) { return; }\n            this.setRequiredComponentData();\n\n            this.initializeComponent();\n            const maxtap_component = document.getElementById(MaxTapComponentElementId);\n\n            maxtap_component?.addEventListener('click', () => {\n            })\n\n            //* Checking for every second if video time is equal to ad start time.\n\n            this.interval_id = setInterval(() => {\n\n                if (!this.video) {\n                    console.error(\"Cannot find video element with id \");\n                    return;\n                }\n\n                if (!this.image_loaded && ((this.component_start_time - this.video!.currentTime) <= 15)) {\n                    console.log(\"Loding\");\n                    this.prefetchImage();\n                }\n\n                if (this.canComponentDisplay(this.video!.currentTime)) {\n                    this.displayComponent();\n                    return;\n                }\n                if (this.canCloseComponent(this.video!.currentTime)) {\n                    this.current_component_index++;\n                    this.removeCurrentComponent();\n\n                }\n\n                //* Updating the current ad data to next ad data.;\n\n            }, 500);\n        })\n    }\n\n\n\n    private initializeComponent = () => {\n        //*  Getting data from firestore using http request. And changing state of component.\n\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n\n\n        this.parentElement = this.video.parentElement;\n\n        const main_component = document.createElement('div');\n        const main_container = document.createElement('div') as HTMLDivElement;\n\n        main_container.className = 'maxtap_container';\n        main_container.id = MaxTapMainContainerId;\n\n        main_component.style.display = 'none';\n        main_component.addEventListener('click', this.onComponentClick);\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n\n        main_container.appendChild(this.video);\n        main_container.appendChild(main_component);\n\n        this.parentElement?.appendChild(main_container);\n\n        //!<------------------>  Re-initializing the video to get latest reference after manipulating dom elements.<----------------------->\n\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n    }\n\n    private prefetchImage = () => {\n        if (!this.component_data) { return; }\n        this.image_loaded = true;\n        let img = new Image();\n        img.src = this.component_data[this.current_component_index]['img_url'];\n    }\n\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if (this.component_start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime >= this.component_start_time) && !this.is_component_showing) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n\n        if (this.component_start_time < 0) { return false; }\n        if ((currentTime >= this.component_end_time) && this.is_component_showing) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent() {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (this.current_component_index >= this.component_data!.length) {\n            console.log(\"clear interval\");\n            clearInterval(this.interval_id);\n        }\n        else {\n            this.setRequiredComponentData(); // * Updating next ad data to class variables.\n        }\n        if (!main_container) { return; }\n        main_container.style.display = \"none\";\n        main_container.innerHTML = '';\n        this.image_loaded = false;\n        this.is_component_showing = false;\n    }\n\n    private displayComponent = () => {\n\n        //* Displaying ad by just changing css display:none -> display:flex\n\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        main_component.style.display = 'flex';\n      \n        main_component.innerHTML = `\n        <div class=\"maxtap_main\" >\n            <p>${this.product_details}</p>\n            <div class=\"maxtap_img_wrapper\">\n                <img src=\"${this.image_url}\"/>\n            </div>\n        </div>\n        `\n        window.gtag('event', 'watch', {\n\n            'event_category': 'impression',\n            'event_action': 'watch',\n            \"content_id\": this.content_id,\n\n        })\n        this.is_component_showing = true;\n\n    }\n\n    private onComponentClick = () => {\n\n        window.gtag('event', 'click', {\n            'event_category': 'action',\n            'event_action': 'click',\n            \"content_id\": this.content_id,\n            \"click_time\": Math.floor(this.video!.currentTime)\n        })\n\n        if (!this.redirect_url) { return; }\n        window.open(this.redirect_url, \"_blank\");\n    }\n\n\n    private setRequiredComponentData() {\n\n        //* Setting ad to class variable and as well to react state.\n        if (!this.component_data) return;\n        const data = this.component_data;\n        this.component_start_time = parseInt(data[this.current_component_index]['start']);\n        this.image_url = data[this.current_component_index]['img_url'];\n        this.redirect_url = data[this.current_component_index]['ad_url'];\n        this.product_details = data[this.current_component_index]['product_details'];\n        this.component_end_time = parseInt(data[this.current_component_index]['end']);\n\n    }\n\n\n}\n","import { DataUrl } from \"../config\";\n\nexport const queryData = (file_name: string):Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        if (!file_name.includes('.json')) {\n            file_name += '.json';\n        }\n        fetch(`${DataUrl}/${file_name}`\n            , {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Accept: \"application/json\",\n                },\n            }\n        )\n            .then(fetch_res => {\n                fetch_res.json().then((json_data: []) => {\n                    json_data.sort((a, b) => {\n                        if (parseInt(a['start']) < parseInt(b['start'])) {\n                            return -1;\n                        }\n                        if (parseInt(a['start']) > parseInt(b['start'])) {\n                            return 1;\n                        }\n                        return 0;\n                    })\n                    res(json_data);\n                })\n            }).catch(err => {\n                rej(err);\n            })\n    })\n}","export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\nexport const CssCdn = 'https://unpkg.com/maxtap_plugin@0.1.7/dist/styles.css';\n"],"names":["data","file_name","_this","video","document","querySelector","content_id","Promise","res","rej","includes","fetch","DataUrl","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","component_data","setRequiredComponentData","initializeComponent","maxtap_component","getElementById","addEventListener","interval_id","setInterval","image_loaded","component_start_time","currentTime","console","log","prefetchImage","canComponentDisplay","displayComponent","canCloseComponent","current_component_index","removeCurrentComponent","error","style","width","height","parentElement","main_component","createElement","main_container","className","id","display","onComponentClick","appendChild","Image","src","is_component_showing","component_end_time","innerHTML","product_details","image_url","window","gtag","Math","floor","redirect_url","open","contend_id","css_file","href","rel","ga_script","async","dataLayer","push","arguments","Date","head_tag","this","length","clearInterval"],"mappings":"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"}