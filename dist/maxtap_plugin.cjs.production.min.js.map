{"version":3,"file":"maxtap_plugin.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Utils/utils.ts","../src/app.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { DataUrl, DataAttribute } from \"../config\";\nimport { ComponentData } from \"../app\";\nexport const fetchAdData = (file_name: string): Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        try {\n            if (!file_name.includes('.json')) {\n                file_name += '.json';\n            }\n            fetch(`${DataUrl}/${file_name}`\n                , {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                }\n            )\n                .then(fetch_res => {\n                    fetch_res.json().then((json_data: []) => {\n                        json_data.sort((a, b) => {\n                            if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n                                return -1;\n                            }\n                            if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n                                return 1;\n                            }\n                            return 0;\n                        })\n\n                        res(json_data);\n                    })\n                }).catch(err => {\n                    rej(err);\n                })\n        } catch (err) {\n            rej(err)\n        }\n    })\n\n}\n\nexport const getVideoElement = (): HTMLVideoElement | undefined => {\n\n    const elements = document.querySelectorAll(`[${DataAttribute}]`);\n    for (let i = 0; i < elements.length; i++) {\n        if (elements[i].tagName === 'VIDEO') {\n            return elements[i] as HTMLVideoElement;\n        }\n\n    }\n    console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n                   Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n                            [OR]\n                   Try to initialize the maxtap_ad component after window load.`);\n    return undefined;\n}\n\nexport const resizeComponentImgAccordingToVideo = (video: HTMLVideoElement) => {\n    const img_wrapper = document.querySelector('.maxtap_img_wrapper') as HTMLDivElement;\n    const per = (video.getBoundingClientRect().width * (8 / 100));\n    if (per <= 125 && per >= 80 && img_wrapper) {\n        img_wrapper.style.width = per + \"px\";\n    }\n}\nexport const getCurrentComponentIndex = (components_data:ComponentData[],video_current_time:number) :number=> {\n    for (let i = 0; i < components_data.length; i++) {\n        const component = components_data[i];   \n        if (video_current_time >= component.start_time && video_current_time <= component.end_time) {\n            return i;\n        }\n    }\n    return -1;\n}","import { DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId } from './config';\nimport { fetchAdData, getCurrentComponentIndex, getVideoElement } from './Utils/utils';\n\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\n\ninterface PluginProps {\n    content_id: string;\n}\n\nexport interface ComponentData {\n    is_image_loaded: boolean;\n    start_time: number;\n    end_time: number;\n    image_link: string;\n    redirect_link: string;\n    caption_regional_language: string;\n    client_name: string;\n    content_name: string;\n    duration: number;\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private current_component_index = 0;\n    private components_data?: ComponentData[];\n    private content_id: string;\n\n    constructor(data: PluginProps) {\n        this.content_id = data.content_id;\n        this.parentElement = null;\n    }\n\n\n    public init = () => {\n\n        const ga_script_element = document.createElement('script');\n        ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n        ga_script_element.async = true;\n        ga_script_element.id = GoogleAnalyticsCode;\n        ga_script_element.addEventListener('load', () => {\n            window.dataLayer = window.dataLayer || [];\n            window.gtag = function () { window.dataLayer.push(arguments); }\n            window.gtag('js', new Date());\n            window.gtag('config', GoogleAnalyticsCode)\n        })\n\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(ga_script_element);\n\n        this.video = getVideoElement();\n\n        if (!this.video) {\n            console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n            [OR]\n            Try to initialize the maxtap_ad component after window load.\n            `);\n            return;\n        }\n        try {\n            fetchAdData(this.content_id).then(data => {\n                this.components_data = data;\n                if (!this.components_data) { return; }\n                this.initializeComponent();\n                const maxtap_component = document.getElementById(MaxTapComponentElementId);\n                maxtap_component!.addEventListener('click', () => {\n                    this.onComponentClick();\n                })\n                //* Checking for every second if video time is equal to ad start time.\n                setInterval(() => {\n                    this.updateComponent();\n                }, 500);\n            })\n                .catch(err => {\n                    console.error(err)\n                })\n\n        } catch (err) {\n            console.error(err);\n\n        }\n    }\n\n    private updateComponent = () => {\n\n        if (!this.video || !this.components_data) {\n            console.error(\"Cannot find video element with id \");\n            return;\n        }\n\n        const current_index = getCurrentComponentIndex(this.components_data, this.video.currentTime);\n\n        if (current_index >= 0) {\n            this.current_component_index = current_index;\n        } else {\n            this.removeCurrentComponent();\n        }\n        if(this.components_data[this.current_component_index] !== undefined){\n            if (!this.components_data[this.current_component_index]['is_image_loaded'] && ((this.components_data[this.current_component_index].start_time - this.video!.currentTime) <= 15)) {\n                this.prefetchImage();\n            }\n        }\n        if (this.canComponentDisplay(this.video!.currentTime)) {\n            this.displayComponent()\n        }\n        if (this.canCloseComponent(this.video!.currentTime)) {\n            this.current_component_index++;\n            this.removeCurrentComponent();\n        }\n    }\n\n    private initializeComponent = () => {\n\n        //*  Getting data from firestore using http request. And changing state of component.\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n        this.parentElement = this.video.parentElement;\n        if (!this.parentElement) { return }\n        this.parentElement.style.position = 'relative';\n        const main_component = document.createElement('div');\n        main_component.style.display = 'none';\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n        this.parentElement?.appendChild(main_component);\n        for (let i = 0; i < this.components_data!.length; i++) {\n            this.components_data![i].is_image_loaded = false;\n        }\n\n        //! Re-initializing the video to get latest reference after manipulating dom elements.\n        this.video = getVideoElement();\n\n    }\n\n    private prefetchImage = () => {\n        if (!this.components_data) { return; }\n        this.components_data[this.current_component_index].is_image_loaded = true;\n        let img = new Image();\n        img.src = this.components_data[this.current_component_index]['image_link'];\n    }\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if (!this.components_data) { return false; }\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime >= this.components_data[this.current_component_index].start_time)) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n        if (!this.components_data) return true;\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        if ((currentTime >= this.components_data[this.current_component_index].end_time)) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent() {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (!main_container) { return; }\n        if (main_container.style.display !== 'none') {\n            main_container.style.display = \"none\";\n            main_container.innerHTML = '';\n        }\n    }\n\n    private displayComponent = () => {\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        const component_html =\n            `\n        <div class=\"maxtap_main\" >\n        <p>${this.components_data![this.current_component_index].caption_regional_language}</p>\n        <div class=\"maxtap_img_wrapper\">\n        <img src=\"${this.components_data![this.current_component_index].image_link}\"/>\n        </div>\n        </div>\n        `\n        if (main_component.style.display === 'none') {\n            main_component.style.display = 'flex';\n            main_component.innerHTML = component_html;\n        };\n        // resizeComponentImgAccordingToVideo(this.video!);\n\n        window.gtag('event', 'watch', {\n            'event_category': 'impression',\n            'event_action': 'watch',\n            \"content_id\": this.content_id,\n        })\n\n    }\n\n    private onComponentClick = () => {\n        window.gtag('event', 'click', {\n            'event_category': 'action',\n            'event_action': 'click',\n            \"content_id\": this.content_id,\n            \"click_time\": Math.floor(this.video!.currentTime)\n        })\n        if (!this.components_data) { return; }\n        window.open(this.components_data![this.current_component_index].redirect_link, \"_blank\");\n    }\n\n}\n","export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\n","import './styles.less'\nimport { LIB_VERSION } from './version';\nconsole.log(`maxtap_plugin@${LIB_VERSION}`);\nexport {Component} from  './app';"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","getVideoElement","elements","querySelectorAll","i","length","tagName","console","error","Component","data","ga_script_element","src","async","id","addEventListener","window","dataLayer","gtag","push","arguments","Date","file_name","head_tag","querySelector","_this","video","content_id","Promise","res","rej","includes","fetch","DataUrl","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","components_data","initializeComponent","getElementById","onComponentClick","setInterval","updateComponent","current_index","video_current_time","component","start_time","end_time","getCurrentComponentIndex","currentTime","current_component_index","removeCurrentComponent","undefined","prefetchImage","canComponentDisplay","displayComponent","canCloseComponent","width","height","parentElement","position","main_component","display","className","is_image_loaded","Image","component_html","caption_regional_language","image_link","innerHTML","Math","floor","open","redirect_link","main_container","log"],"mappings":"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"}