{"version":3,"file":"package_name.cjs.production.min.js","sources":["../src/app.ts","../src/Utils/utils.ts","../src/config.ts"],"sourcesContent":["import { CssCdn, DataAttribute, GoogleAnalyticsCode, MaxTapComponentElementId, MaxTapMainContainerId } from './config.js';\nimport { fetchAdData } from './Utils/utils.js';\n/* \n*   A Brief about how MAXTAP Ad  ðŸ”ŒpluginðŸ”Œ works\n?ðŸ›‘ ** Note **: Here in variables,function names..etc component refers to ad, we need to make it because of ad-blockers.\n*  \n*                       ------- * Steps * ---------\n*     => Find video element by data attribute set to the video element ðŸ“¹.\n*\n*     => Once we make sure that video element is available,\n*       Create a main container ðŸ“¦ <div class=\"maxtap_container\"></div> element and add the video element into the created container.\n*\n*     => Set the css properties of main container as same as video parent element.\n*\n*     => Now ðŸ’‰inject maxtap adðŸ“„ component into the main container and next to video element.\n*     \n*     => Then set position,width,font ..etc of ad component to make it look good.\n*\n*     => Then finally add this main element which we created before to video parent element.\n\n*            ðŸ“¦ Our Main container ðŸ“¦\n*                    |\n*          __________|_____________\n*         |                       |\n*   [client video elementðŸ“¹]       [Our Ad element ðŸ“„]\n*\n*\n */\ninterface PluginProps {\n    content_id: string;\n}\n\ninterface ComponentData {\n    is_image_loaded: boolean;\n    start_time: number;\n    end_time: number;\n    image_link: string;\n    redirect_link: string;\n    caption_regional_language: string;\n    client_name:string;\n    content_name:string;\n    duration:number;\n}\n\ndeclare global {\n    interface Window { Maxtap: any; gtag: any; dataLayer: any[] }\n}\n\n\nexport class Component {\n\n    private video?: HTMLVideoElement;\n    private parentElement: HTMLElement | null;\n    private current_component_index = 0;\n    private components_data?: ComponentData[];\n    private interval_id: any;\n    private content_id: string;\n\n    constructor(data: PluginProps) {\n        console.log(\"Hit\");\n        this.content_id = data.content_id;\n        this.parentElement = null;\n        const css_link_element = document.createElement('link');\n        css_link_element.href = CssCdn;\n        css_link_element.rel = 'stylesheet';\n        const ga_script_element = document.createElement('script');\n        ga_script_element.src = `https://www.googletagmanager.com/gtag/js?id=${GoogleAnalyticsCode}`;\n        ga_script_element.async = true;\n        ga_script_element.id = GoogleAnalyticsCode;\n        ga_script_element.addEventListener('load', () => {\n            window.dataLayer = window.dataLayer || [];\n            window.gtag = function () { window.dataLayer.push(arguments); }\n            window.gtag('js', new Date());\n            window.gtag('config', GoogleAnalyticsCode)\n\n        })\n        const head_tag = document.querySelector('head');\n        head_tag?.appendChild(css_link_element);\n        head_tag?.appendChild(ga_script_element);\n\n    }\n\n    public init = () => {\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n        if (!this.video) {\n            console.error(\"Cannot find video element,Please check data attribute. It should be \" + DataAttribute + `\n            Example: <video src=\"https://some_source\" ${DataAttribute} > </video> \n\n            [OR]\n\n            Try to initialize the maxtap_ad component after window load.\n            `);\n            return;\n        }\n        try {\n            fetchAdData(this.content_id).then(data => {\n                this.components_data = data\n                if (!this.components_data) { return; }\n                this.initializeComponent();\n                const maxtap_component = document.getElementById(MaxTapComponentElementId);\n                maxtap_component?.addEventListener('click', () => {\n                })\n                //* Checking for every second if video time is equal to ad start time.\n                this.interval_id = setInterval(() => {\n                    this.updateComponent();\n                }, 1000);\n            })\n                .catch(err => {\n                    console.error(err)\n                })\n        } catch (err) {\n            console.error(err);\n\n        }\n    }\n\n    private updateComponent = () => {\n        if (!this.video ||!this.components_data) {\n            console.error(\"Cannot find video element with id \");\n            return;\n        }\n\n        const video_current_time = this.video.currentTime;\n        this.components_data.forEach((component,component_index )=> {\n            if(video_current_time>=component.start_time && video_current_time<=component.end_time){\n                this.current_component_index = component_index;\n            }\n        });\n        if (!this.components_data[this.current_component_index].is_image_loaded && ((this.components_data[this.current_component_index].start_time - this.video!.currentTime) <= 15)) {\n            this.prefetchImage();\n        }\n        if (this.canComponentDisplay(this.video!.currentTime)) {\n            this.displayComponent()\n        }\n        if (this.canCloseComponent(this.video!.currentTime)) {\n            console.log(this.current_component_index);\n            \n            this.current_component_index++;\n            this.removeCurrentComponent();\n        }\n    }\n\n    private initializeComponent = () => {\n        //*  Getting data from firestore using http request. And changing state of component.\n        if (!this.video) { return; }\n        this.video.style.width = \"100%\";\n        this.video.style.height = \"100%\";\n        this.parentElement = this.video.parentElement;\n        const main_component = document.createElement('div');\n        const main_container = document.createElement('div') as HTMLDivElement;\n        main_container.className = 'maxtap_container';\n        main_container.id = MaxTapMainContainerId;\n        main_component.style.display = 'none';\n        main_component.addEventListener('click', this.onComponentClick);\n        main_component.id = MaxTapComponentElementId;\n        main_component.className = 'maxtap_component_wrapper';\n        main_container.appendChild(this.video);\n        main_container.appendChild(main_component);\n        this.parentElement?.appendChild(main_container);\n        //!<------------------>  Re-initializing the video to get latest reference after manipulating dom elements.<----------------------->\n        this.video = document.querySelector(`[${DataAttribute}]`) as HTMLVideoElement;\n    }\n\n    private prefetchImage = () => {\n        if (!this.components_data) { return; }\n        this.components_data[this.current_component_index].is_image_loaded = true;\n        let img = new Image();\n        img.src = this.components_data[this.current_component_index]['image_link'];\n    }\n\n\n    private canComponentDisplay = (currentTime: number): boolean => {\n        if(!this.components_data){ return false;}\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        //* Checking video time and also if video is already shown.\n        if ((currentTime >= this.components_data[this.current_component_index].start_time) ) {\n            return true;\n        };\n        return false;\n    }\n\n    private canCloseComponent = (currentTime: number): boolean => {\n        if(!this.components_data)return true;\n        if (this.components_data[this.current_component_index].start_time < 0) { return false; }\n        if ((currentTime >= this.components_data[this.current_component_index].end_time) ) {\n            return true;\n        }\n        return false;\n    }\n\n    private removeCurrentComponent() {\n        const main_container = document.getElementById(MaxTapComponentElementId);\n        if (this.current_component_index >= this.components_data!.length) {\n            clearInterval(this.interval_id);\n        }\n        if (!main_container) { return; }\n        main_container.style.display = \"none\";\n        main_container.innerHTML = '';\n    }\n\n    private displayComponent = () => {\n        //* Displaying ad by just changing css display:none -> display:flex\n        const main_component = document.getElementById(MaxTapComponentElementId);\n        if (!main_component) { return; }\n        main_component.style.display = 'flex';\n        main_component.innerHTML = `\n        <div class=\"maxtap_main\" >\n            <p>${this.components_data![this.current_component_index].caption_regional_language}</p>\n            <div class=\"maxtap_img_wrapper\">\n                <img src=\"${this.components_data![this.current_component_index].image_link}\"/>\n            </div>\n        </div>\n        `\n        window.gtag('event', 'watch', {\n            'event_category': 'impression',\n            'event_action': 'watch',\n            \"content_id\": this.content_id,\n        })\n\n    }\n\n    private onComponentClick = () => {\n        window.gtag('event', 'click', {\n            'event_category': 'action',\n            'event_action': 'click',\n            \"content_id\": this.content_id,\n            \"click_time\": Math.floor(this.video!.currentTime)\n        })\n        if (!this.components_data || this.components_data[this.current_component_index].image_link) { return; }\n        window.open(this.components_data![this.current_component_index].redirect_link, \"_blank\");\n    }\n\n}\n","import { DataUrl } from \"../config\";\nexport const fetchAdData = (file_name: string): Promise<[]> => {\n\n    return new Promise((res, rej) => {\n        try {\n            if (!file_name.includes('.json')) {\n                file_name += '.json';\n            }\n            fetch(`${DataUrl}/${file_name}`\n                , {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                }\n            )\n                .then(fetch_res => {\n                    fetch_res.json().then((json_data: []) => {\n                        json_data.sort((a, b) => {\n                            if (parseInt(a['start_time']) < parseInt(b['start_time'])) {\n                                return -1;\n                            }\n                            if (parseInt(a['start_time']) > parseInt(b['start_time'])) {\n                                return 1;\n                            }\n                            return 0;\n                        })\n                        \n                        res(json_data);\n                    })\n                }).catch(err => {\n                    rej(err);\n                })\n        } catch (err) {\n            rej(err)\n        }\n    })\n\n}","export const MaxTapComponentElementId = 'componentmaxtap';\nexport const GoogleAnalyticsCode  ='G-05P2385Q2K';\nexport const MaxTapMainContainerId = 'containermaxtap';\nexport const DataAttribute = 'data-displaymaxtap';\nexport const DataUrl =\"https://storage.googleapis.com/maxtap-adserver-dev.appspot.com\";\nexport const CssCdn = 'https://unpkg.com/maxtap_plugin_dev@0.1.16/dist/styles.css';\n"],"names":["data","file_name","_this","video","document","querySelector","content_id","Promise","res","rej","includes","fetch","DataUrl","method","headers","Accept","then","fetch_res","json","json_data","sort","a","b","parseInt","err","components_data","initializeComponent","maxtap_component","getElementById","addEventListener","interval_id","setInterval","updateComponent","console","error","video_current_time","currentTime","forEach","component","component_index","start_time","end_time","current_component_index","is_image_loaded","prefetchImage","canComponentDisplay","displayComponent","canCloseComponent","log","removeCurrentComponent","style","width","height","parentElement","main_component","createElement","main_container","className","id","display","onComponentClick","appendChild","Image","src","innerHTML","caption_regional_language","image_link","window","gtag","Math","floor","open","redirect_link","css_link_element","href","rel","ga_script_element","async","dataLayer","push","arguments","Date","head_tag","this","length","clearInterval"],"mappings":"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"}